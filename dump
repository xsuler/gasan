
a.out:     file format elf64-x86-64
a.out
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001050

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x0000000000000268 memsz 0x0000000000000268 flags r--
  INTERP off    0x00000000000002a8 vaddr 0x00000000000002a8 paddr 0x00000000000002a8 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x00000000000005d0 memsz 0x00000000000005d0 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x00000000000002e5 memsz 0x00000000000002e5 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags r--
    LOAD off    0x0000000000002dd8 vaddr 0x0000000000003dd8 paddr 0x0000000000003dd8 align 2**12
         filesz 0x0000000000000260 memsz 0x0000000000000308 flags rw-
 DYNAMIC off    0x0000000000002de8 vaddr 0x0000000000003de8 paddr 0x0000000000003de8 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x00000000000002c4 vaddr 0x00000000000002c4 paddr 0x00000000000002c4 align 2**2
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
EH_FRAME off    0x000000000000205c vaddr 0x000000000000205c paddr 0x000000000000205c align 2**2
         filesz 0x0000000000000064 memsz 0x0000000000000064 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002dd8 vaddr 0x0000000000003dd8 paddr 0x0000000000003dd8 align 2**0
         filesz 0x0000000000000228 memsz 0x0000000000000228 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x00000000000012d8
  INIT_ARRAY           0x0000000000003dd8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003de0
  FINI_ARRAYSZ         0x0000000000000008
  HASH                 0x00000000000002e8
  GNU_HASH             0x0000000000000320
  STRTAB               0x0000000000000400
  SYMTAB               0x0000000000000340
  STRSZ                0x000000000000009f
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000004000
  PLTRELSZ             0x0000000000000030
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000005a0
  RELA                 0x00000000000004e0
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  VERNEED              0x00000000000004b0
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000004a0
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 03 GLIBC_2.2.5
    0x0d696914 0x00 02 GLIBC_2.4

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  00000000000002a8  00000000000002a8  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00000000000002c4  00000000000002c4  000002c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .hash         00000034  00000000000002e8  00000000000002e8  000002e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000320  0000000000000320  00000320  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  0000000000000340  0000000000000340  00000340  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000009f  0000000000000400  0000000000000400  00000400  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000010  00000000000004a0  00000000000004a0  000004a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  00000000000004b0  00000000000004b0  000004b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  00000000000004e0  00000000000004e0  000004e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000030  00000000000005a0  00000000000005a0  000005a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000030  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000285  0000000000001050  0000000000001050  00001050  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         0000000d  00000000000012d8  00000000000012d8  000012d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       0000005b  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000064  000000000000205c  000000000000205c  0000205c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000150  00000000000020c0  00000000000020c0  000020c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000003dd8  0000000000003dd8  00002dd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000003de0  0000000000003de0  00002de0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      000001f0  0000000000003de8  0000000000003de8  00002de8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000028  0000000000003fd8  0000000000003fd8  00002fd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got.plt      00000028  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000004028  0000000000004028  00003028  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          000000a8  0000000000004038  0000000000004038  00003038  2**3
                  ALLOC
 24 .comment      00000026  0000000000000000  0000000000000000  00003038  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000000002a8 l    d  .interp	0000000000000000              .interp
00000000000002c4 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000002e8 l    d  .hash	0000000000000000              .hash
0000000000000320 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000340 l    d  .dynsym	0000000000000000              .dynsym
0000000000000400 l    d  .dynstr	0000000000000000              .dynstr
00000000000004a0 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000004b0 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000004e0 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000005a0 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
0000000000001050 l    d  .text	0000000000000000              .text
00000000000012d8 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
000000000000205c l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000020c0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003dd8 l    d  .init_array	0000000000000000              .init_array
0000000000003de0 l    d  .fini_array	0000000000000000              .fini_array
0000000000003de8 l    d  .dynamic	0000000000000000              .dynamic
0000000000003fd8 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .got.plt	0000000000000000              .got.plt
0000000000004028 l    d  .data	0000000000000000              .data
0000000000004038 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              init.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001080 l     F .text	0000000000000000              deregister_tm_clones
00000000000010b0 l     F .text	0000000000000000              register_tm_clones
00000000000010f0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004038 l     O .bss	0000000000000001              completed.7392
0000000000003de0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001140 l     F .text	0000000000000000              frame_dummy
0000000000003dd8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              t.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
000000000000220c l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003de0 l       .init_array	0000000000000000              __init_array_end
0000000000003de8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003dd8 l       .init_array	0000000000000000              __init_array_start
000000000000205c l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000004000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
00000000000012d0 g     F .text	0000000000000005              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004028  w      .data	0000000000000000              data_start
0000000000001150 g     F .text	0000000000000001              enter_func
0000000000004040 g     O .bss	0000000000000028              d
0000000000004068 g     O .bss	0000000000000028              b
0000000000004038 g       .data	0000000000000000              _edata
00000000000012d8 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000001170 g     F .text	0000000000000014              mark_valid
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004028 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004030 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000011c0 g     F .text	0000000000000070              func
0000000000001260 g     F .text	0000000000000065              __libc_csu_init
00000000000040e0 g       .bss	0000000000000000              _end
0000000000001050 g     F .text	000000000000002f              _start
0000000000001160 g     F .text	0000000000000001              leave_func
0000000000004090 g     O .bss	0000000000000028              c
00000000000040b8 g     O .bss	0000000000000028              a
0000000000004038 g       .bss	0000000000000000              __bss_start
0000000000001230 g     F .text	000000000000002f              main
0000000000004038 g     O .data	0000000000000000              .hidden __TMC_END__
00000000000011b0 g     F .text	0000000000000001              report_xasan
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000001190 g     F .text	0000000000000014              mark_invalid
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5


